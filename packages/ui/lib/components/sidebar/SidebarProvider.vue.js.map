{"version":3,"file":"SidebarProvider.vue.js","sources":["../../../src/components/sidebar/SidebarProvider.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { cn } from '@/lib/utils'\r\nimport { useEventListener, useMediaQuery, useVModel } from '@vueuse/core'\r\nimport { TooltipProvider } from 'radix-vue'\r\nimport { computed, type HTMLAttributes, type Ref, ref } from 'vue'\r\nimport { provideSidebarContext, SIDEBAR_COOKIE_MAX_AGE, SIDEBAR_COOKIE_NAME, SIDEBAR_KEYBOARD_SHORTCUT, SIDEBAR_WIDTH, SIDEBAR_WIDTH_ICON } from './utils'\r\n\r\nconst props = withDefaults(defineProps<{\r\n  defaultOpen?: boolean\r\n  open?: boolean\r\n  class?: HTMLAttributes['class']\r\n}>(), {\r\n  defaultOpen: true,\r\n  open: undefined,\r\n})\r\n\r\nconst emits = defineEmits<{\r\n  'update:open': [open: boolean]\r\n}>()\r\n\r\nconst isMobile = useMediaQuery('(max-width: 768px)')\r\nconst openMobile = ref(false)\r\n\r\nconst open = useVModel(props, 'open', emits, {\r\n  defaultValue: props.defaultOpen ?? false,\r\n  passive: (props.open === undefined) as false,\r\n}) as Ref<boolean>\r\n\r\nfunction setOpen(value: boolean) {\r\n  open.value = value // emits('update:open', value)\r\n\r\n  // This sets the cookie to keep the sidebar state.\r\n  document.cookie = `${SIDEBAR_COOKIE_NAME}=${open.value}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\r\n}\r\n\r\nfunction setOpenMobile(value: boolean) {\r\n  openMobile.value = value\r\n}\r\n\r\n// Helper to toggle the sidebar.\r\nfunction toggleSidebar() {\r\n  return isMobile.value ? setOpenMobile(!openMobile.value) : setOpen(!open.value)\r\n}\r\n\r\nuseEventListener('keydown', (event: KeyboardEvent) => {\r\n  if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\r\n    event.preventDefault()\r\n    toggleSidebar()\r\n  }\r\n})\r\n\r\n// We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\r\n// This makes it easier to style the sidebar with Tailwind classes.\r\nconst state = computed(() => open.value ? 'expanded' : 'collapsed')\r\n\r\nprovideSidebarContext({\r\n  state,\r\n  open,\r\n  setOpen,\r\n  isMobile,\r\n  openMobile,\r\n  setOpenMobile,\r\n  toggleSidebar,\r\n})\n</script>\n\n<template>\n  <TooltipProvider :delay-duration=\"0\">\n    <div\n      :style=\"{\n        '--sidebar-width': SIDEBAR_WIDTH,\n        '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\n      }\"\n      :class=\"cn('group/sidebar-wrapper flex min-h-svh w-full text-sidebar-foreground has-[[data-variant=inset]]:bg-sidebar', props.class)\"\n      v-bind=\"$attrs\"\n    >\n      <slot />\n    </div>\n  </TooltipProvider>\n</template>\n"],"names":["props","__props","emits","__emit","isMobile","useMediaQuery","openMobile","ref","open","useVModel","setOpen","value","SIDEBAR_COOKIE_NAME","SIDEBAR_COOKIE_MAX_AGE","setOpenMobile","toggleSidebar","useEventListener","event","SIDEBAR_KEYBOARD_SHORTCUT","state","computed","provideSidebarContext"],"mappings":"gfAOA,MAAMA,EAAQC,EASRC,EAAQC,EAIRC,EAAWC,gBAAc,oBAAoB,EAC7CC,EAAaC,MAAI,EAAK,EAEtBC,EAAOC,EAAA,UAAUT,EAAO,OAAQE,EAAO,CAC3C,aAAcF,EAAM,aAAe,GACnC,QAAUA,EAAM,OAAS,MAAA,CAC1B,EAED,SAASU,EAAQC,EAAgB,CAC/BH,EAAK,MAAQG,EAGb,SAAS,OAAS,GAAGC,qBAAmB,IAAIJ,EAAK,KAAK,qBAAqBK,EAAAA,sBAAsB,EAAA,CAGnG,SAASC,EAAcH,EAAgB,CACrCL,EAAW,MAAQK,CAAA,CAIrB,SAASI,GAAgB,CAChB,OAAAX,EAAS,MAAQU,EAAc,CAACR,EAAW,KAAK,EAAII,EAAQ,CAACF,EAAK,KAAK,CAAA,CAG/DQ,mBAAA,UAAYC,GAAyB,CAChDA,EAAM,MAAQC,EAAA,4BAA8BD,EAAM,SAAWA,EAAM,WACrEA,EAAM,eAAe,EACPF,EAAA,EAChB,CACD,EAID,MAAMI,EAAQC,EAAAA,SAAS,IAAMZ,EAAK,MAAQ,WAAa,WAAW,EAE5Ca,OAAAA,wBAAA,CACpB,MAAAF,EACA,KAAAX,EACA,QAAAE,EACA,SAAAN,EACA,WAAAE,EACA,cAAAQ,EACA,cAAAC,CAAA,CACD"}